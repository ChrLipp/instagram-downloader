buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath "com.github.ben-manes:gradle-versions-plugin:$VERSIONS_PLUGIN"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$SPRING_BOOT_VERSION"
		classpath "io.spring.gradle:dependency-management-plugin:$DEPENDENCY_MANAGEMENT_PLUGIN"
		classpath "de.dynamicfiles.projects.gradle.plugins:javafx-gradle-plugin:$JAVAFX_PLUGIN"
	}
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'org.springframework.boot'
apply plugin: 'javafx-gradle-plugin'

repositories {
    jcenter()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:$SPRING_BOOT_VERSION"
	}
}

// Variables and constants
ext {
	LOG_DIR = "${project.projectDir.path}/logs"
	ARGS = [
	]

	// versions taken from Spring BOM
	GROOVY_VERSION = dependencyManagement.importedProperties['groovy.version']
}

// Dependencies
configurations {
	compile.exclude module: 'commons-logging'
}

dependencies  {
	compile "org.codehaus.groovy:groovy-all:$GROOVY_VERSION:indy"
	compile 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-logging'
	compile "de.roskenet:springboot-javafx-support:$SPRING_BOOT_JAVAFX_VERSION"
	compile "io.github.http-builder-ng:http-builder-ng-core:$HTTP_BUILDER_VERSION"
	compile "com.jfoenix:jfoenix:$JFOENIX_VERSION"
	compile "de.jensd:fontawesomefx-materialdesignfont:$FONTAWESOME_VERSION"

	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile "org.spockframework:spock-spring:$SPOCK_SPRING_VERSION"
}

// Gradle settings
wrapper {
	gradleVersion GRADLE_VERSION
}

// Java options
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// Groovy options
[compileGroovy.groovyOptions, compileTestGroovy.groovyOptions]*.with {
	optimizationOptions = [ indy: true ]
}

// Spring boot options
bootRun {
	jvmArgs = ["-Dlogpath=${project.LOG_DIR}"]
	args ARGS
}

jar {
	// Spring Boot uses bootJar and disables jar task,
	// jfxJar depends on jar and doesn't work with bootJar,
	// so we have to enable it
	enabled = true
}
jfx {
	mainClass = 'at.corba.tools.instagram_downloader.InstagramDownloaderApplication'
	vendor = 'Christian LIPP'
	jfxMainAppJarName = "instagram-downloader.jar"
	appName = rootProject.name
}

// Filter unwanted versions for the dependency updates plugin
dependencyUpdates.resolutionStrategy = {
	componentSelection { rules ->
		rules.all { ComponentSelection selection ->
			boolean rejected = ['alpha', 'beta'].any { qualifier ->
				selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
			}
			if (rejected) {
				selection.reject('Release candidate')
			}
		}
	}
}
